div {
    font-family: -apple-system, BlinkMacSystemFont, sans-serif;
}

.dummy::before{
    /* the line running through shortcuts */
    content:"";
    background-color: rgb(145, 150, 157);
    width: 3px;
    /* shorten the tail, due to hidden result elements */
    height: calc(100% - 2rem);
    top: 0;
    left: 50%;
    z-index: 0;
    position: absolute;
}
.not-implemented{
    margin:auto;
}
.magic {
    position:relative;
    padding-left: 0.5rem;
    padding-right: 0.5rem;
    color: var(--magic-ink);
    background-color: var(--magic-bg);
    margin-left: 0.25rem;
    margin-right: 0.25rem;
    margin-bottom: 0.3rem;
    border-radius: 0.7rem;
    font-weight: normal!important;
/* super long URLs and text: */
    overflow-wrap: break-word;
    word-break: break-word;
}
/* keep line height consistent */
.toggle{
    height: 2.4rem;
    margin-top: .5rem;
    margin-bottom: .5rem;
    overflow: hidden;
}
.specify{
    font-weight: 300;
    overflow-wrap: normal;
    white-space: nowrap;
    overflow-x: scroll;
}
.empty{
    color: lightgray;
}
.leftify>.line-label{
    flex:initial;
    padding-right: .5rem;
}
.leftify>.specify{
    flex:1!important;
    /* overrides flex:initial, so that the content aligns nicely left */
}
.choose-var{
    color:var(--magic-ink);
    font-weight:300;
    flex:initial;
}
.blank{
    color:lightgray;
}
.magic.empty {
    color: var(--magic-empty);
}

.action.comment {
    background-color: rgb(251, 244, 232);
}

.comment>.row.category {
    background-color: rgb(245, 235, 210);
}
/* styling category row with bottom line */
.comment>.row.category,.text>.row.category {
    border-radius: var(--action-corner) var(--action-corner) 0 0;
    margin: -1.2rem -1.2rem 1rem -1.2rem;
    /* 1.2 - 0.25 = 0.95 to bring it in-line with other blocks */
    padding: 0.95rem;border-bottom: 1px solid lightgray;
}
.text div{
    overflow-wrap: break-word;
    word-break: break-word;
    max-height: 60vh;
    overflow-y: scroll;
}
.indent1{
    margin-left: calc(var(--indent) * 1);
}
.indent2{
    margin-left: calc(var(--indent) * 2);
}
.indent3{
    margin-left: calc(var(--indent) * 3);
}
.indent4{
    margin-left: calc(var(--indent) * 4);
}
.indent5{
    margin-left: calc(var(--indent) * 5);
}
.indent6{
    margin-left: calc(var(--indent) * 6);
}
.indent7{
    margin-left: calc(var(--indent) * 7);
}
.indent8{
    margin-left: calc(var(--indent) * 8);
}


.action {
    max-width: 31rem;
    border-radius: var(--action-corner);
    padding: var(--action-padding);
    background-color: white;
    box-shadow: 0 0 1rem rgba(0, 0, 0, .2);
    z-index: 2;
    position: relative;
    margin-bottom: var(--action-padding);
    line-height: 1.6;
    transition: .5s;
    -moz-transition: .5s;
}
.action-glyph,.inline-glyph,.output-glyph{
    border-radius: 0.3em;
    height: 1.5rem;
    width: 1.5rem;
}
.action-glyph {
    margin-right: 0.4rem;
}
.row .inline-glyph, .output-glyph {
    position: relative;
    top:.2rem;
    margin-left: -.15rem;
}
.lower-line .inline-glyph {
    position: relative;
    top:.25rem;
    margin-left: -.15rem;
}

.action-title {
    font-size: 1.5rem;
    margin-top: 0.5rem;
    margin-bottom: 0rem;
    overflow-wrap: break-word;
    word-break: break-word;
}
.action-title.flow{
    margin-top: -.7rem;
    margin-bottom: -.7rem;
}
.action-title .row{
    margin:0;
}
.action-category {
    color: rgba(147, 148, 150,.80);
    font-weight: 300;
    font-size: 1rem;
}

.category {
    margin: -0.25rem;
}

.dummy {
    position: relative;
}

/* line elements */
.line-elems {
    margin: 1rem -1.2rem -1.2rem -1.2rem;
    padding-left: 1.2rem;
    padding-right: 0;
    border-top: 1px solid rgba(0, 0, 0, .125);
}

.lower-line{
    border-top: 1px solid rgba(0, 0, 0, .125);
    padding-right: 1.2rem;
    height: 3.4rem;
    font-size: 1.2rem;
    display: flex;
}
.choose-var, .specify, .lower-line .magic,.lower-line .text,.lower-line a{
    flex:initial;
    margin: auto 0 auto 0;
}
.lower-line:first-child, .list-line:first-child {
    border-top: none!important;
}
.line-label {
    /* expands, unless the line elem needs to be aligned left */
    flex: 2.7; 
    margin:auto;
    /* should be slightly thicker, but CSS doesn't allow it */
    font-weight: 400;
}
.line-label:empty{
    /* make room for the Not Implemented */
    flex: 0 0 0 !important; 
    margin: 0 !important; 
}

.toggle {
    /* 3:5 ratio */
    width: 4rem;
    flex: initial;
    border-radius: 999rem;
}

.toggle.on {
    background-color: rgb(60, 197, 94);
}
.toggle::after {
    content: '';
    width: 2.1rem;
    height: 2.1rem;
    margin:0.15rem;
    border-radius: 50%;
    background-color: white;
    flex:initial;
    align-self: center;
    box-shadow: 0 0 1rem rgba(0, 0, 0, .2);   
}
.toggle.on::after{
    float: right;
}
.toggle.off{
    background-color: rgb(222, 222, 222);
}
.toggle.off::after{
    float: left;
}
.toggle.turning-on {
    background-color: rgb(42, 136, 65);
}
.slider{
    width: 2.1rem;
    height: 2.1rem;
    margin:0.15rem;
    border-radius: 50%;
    background-color: white;
    flex:initial;
    align-self: center;
    box-shadow: 0 0 1rem rgba(0, 0, 0, .2);
}
.toggle.on>.slider{
    float: right;
}

/* list styling */
.list-elem{
    margin: auto .3rem auto 0!important;
}
.lower-line a{
    flex:initial
}
.minus{
    width: 2rem;
    height: 2rem;    
    margin-top: 0.7rem;
    margin-bottom: 0.7rem;
    margin-right: 0.7rem;
}
.dict-key,.dict-value{
    padding-top: 0.7rem;
    padding-bottom: 0.7rem;
}
.dict-key{
    flex: 2.7;
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
}
.dict-value{
    white-space: nowrap;
    overflow: auto;
    padding-left: 0.7rem;
    flex:4;
    border-left: 1px solid rgba(0, 0, 0, .125);
}
.dict-value div{
    /* creates horizontal scrolling */
    display: inline-block;
}
.pill{
    background-color: var(--option-grey);
    margin:auto 0;
    border-radius: .4rem;
    display: flex;
    flex-direction: row;
    height: 1.6rem;
    overflow: hidden;
}
.counter{
    background-color: var(--option-grey);
    margin:auto 0;
    border-radius: .4rem;
    display: flex;
    flex-direction: row;
    height: 2rem;
    overflow: hidden;
}
.counter > img{
    margin:.5rem 0;
    height: 1rem;
    line-height: 1rem;
    padding: 0 1rem;
}
.counter>img:last-of-type{
    border-left: thin lightgray solid;
}
.pill-off{
    margin:.3rem .1rem;
    padding:0rem .5rem;
}
.pill-off, .pill-on{
    font-size:.9rem;
    line-height: 1rem;
    flex:auto;
}
.pill-on{
    margin:.1rem .1rem;
    padding:.2rem .5rem;
    background-color: white;
    border-radius: .35rem;
    font-weight: 500;
    box-shadow: 0 0 .3rem rgba(0, 0, 0, .2);   
}
.pill-off+.pill-off{
    border-left: thin lightgray solid;
}

a:hover{
    text-decoration: none;
}

/* show magic var output */
.output{
    background-color: var(--output-blue);
    bottom:-3rem;
    margin:0 0 var(--action-padding) 50%;
    transform: translate(-50%, 0);
    border-radius: .5rem;
    padding:.1rem .4rem .2rem .4rem;
    transition: .5s;
    -moz-transition: .5s;
    width: fit-content;
    width: -moz-fit-content;
    white-space: nowrap;
}
.shown.output{
    visibility: visible;
    opacity: 100%;
}
.hidden.output{
    visibility: hidden;
    opacity: 0%;
    height:0!important;
    margin-bottom: 0!important;
}
/* modded from 768 due to 35 rem default */
@media only screen and (max-width: 600px) {
    .action{
        max-width: auto;
    }
    #action-container{
        max-width: calc(100vw - 5rem);
        padding-left: 0;
        padding-right: 0;
    }
}
/* dark mode settings */
@media (prefers-color-scheme: dark) {
    .action{
        background-color: rgb(35,35,35);
        color: white;
    }   
    .magic.empty{
        color: var(--dark-magic-empty);
    }
    .magic{
        color:var(--dark-magic-ink);
        background-color: var(--dark-magic-bg);
    }
    .toggle.off{
        background-color: rgb(67,68,72);
    }
    .line-elems,.lower-line{
        border-top: 1px solid rgb(50, 50, 50);
    }
    .pill,.counter{
        background-color: var(--dark-option-grey);
    }
    .pill-on{
        background-color: var(--dark-light-grey);
    }
    .action.comment,.comment>.row.category {
        background-color: rgb(39, 37, 23);
        border-bottom: none;
    }
    .output{
        background-color: var(--dark-output-blue);
        color: white;
    }
    
}